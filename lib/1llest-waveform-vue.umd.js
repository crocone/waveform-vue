(function(l,e){typeof exports=="object"&&typeof module<"u"?e(exports,require("vue")):typeof define=="function"&&define.amd?define(["exports","vue"],e):(l=typeof globalThis<"u"?globalThis:l||self,e(l["1llest-waveform-vue"]={},l.Vue))})(this,function(l,e){"use strict";var U=Object.defineProperty;var X=(l,e,d)=>e in l?U(l,e,{enumerable:!0,configurable:!0,writable:!0,value:d}):l[e]=d;var n=(l,e,d)=>(X(l,typeof e!="symbol"?e+"":e,d),d);class d{constructor(i,t,a){n(this,"canvasCtx");var o;this.canvas=i,this.props=t,this.filteredData=a,this.canvas=i,this.canvasCtx=(o=this.canvas)==null?void 0:o.getContext("2d"),this.props=t,this.filteredData=a}get _canvas(){return this.canvas}set _props(i){this.props=i}get _props(){return this.props}setupCanvas(){this.setCanvasBase(),this.translateCanvasCtx(),this.drawCanvasLines()}setCanvasBase(){this.canvas.width=this.canvas.offsetWidth,this.canvas.height=this.canvas.offsetHeight,this.canvas.style.opacity="1",this.canvasCtx.fillStyle="transparent",this.canvasCtx.fillRect(0,0,this.canvas.width,this.canvas.height)}translateCanvasCtx(){this.canvasCtx.translate(this.canvas.width/this.filteredData.length,this.canvas.height/2-this.canvas.height/2)}drawCanvasLines(){const{canvas:i,canvasCtx:t,filteredData:a}=this;a.forEach((o,p)=>{const v=i.width/a.length,y=v*p-v/2;t.moveTo(y,i.height/2-Math.abs(o)*i.height*.4),t.lineTo(y,i.height/2+Math.abs(o)*i.height*.4)})}drawMask(i){const{canvas:t,canvasCtx:a,props:o}=this;a.globalCompositeOperation="destination-atop",a.fillStyle=o.maskColor,a.fillRect(0,0,i,t.height)}drawWave(){const{canvasCtx:i,props:t}=this;i.lineWidth=t.lineWidth,i.lineCap=t.lineCap,i.strokeStyle=t.lineColor,i.stroke()}setWaveStyle(i){const{canvas:t,canvasCtx:a}=this;a.clearRect(0,0,t.width,t.height),this.drawMask(i),this.drawWave()}}class D{constructor(i){n(this,"props");n(this,"audioCtx");n(this,"audioBuffer");n(this,"gainNode");n(this,"filteredData");n(this,"arrayBuffer");this.props=i,this.audioCtx=new AudioContext}get _filteredData(){return this.filteredData}get _audioDuration(){if(!this.audioBuffer)throw new Error("can not get duration before audio inited");return this.audioBuffer.duration}async setupAudio(){await this.createAudioBuffer(),this.createFilterData(),this.createGainNode()}async fetchAudioFile(){try{const i=await fetch(this.props.url,this.props.requestOptions);this.arrayBuffer=await i.arrayBuffer()}catch(i){console.error(i)}}async createAudioBuffer(){this.audioBuffer=await this.audioCtx.decodeAudioData(this.arrayBuffer)}createGainNode(){this.gainNode=this.audioCtx.createGain(),this.gainNode.gain.setValueAtTime(0,this.audioCtx.currentTime)}createFilterData(){const i=this.props.samplingRate,t=[],a=this.audioBuffer.getChannelData(0);for(let o=0;o<i;o++){const p=Math.floor(a.length/i),v=a[o*p];t.push(v)}this.filteredData=t}}function x(s){return new Promise(i=>setTimeout(i,s))}class B extends D{constructor(t){super(t);n(this,"startAt");n(this,"pauseAt");n(this,"pickAt");n(this,"playing");n(this,"audioBufferSourceNode");n(this,"FADE_DURATION");n(this,"playbackRate");this.startAt=0,this.pauseAt=0,this.pickAt=0,this.playing=!1,this.FADE_DURATION=this.props.fade?.08:0,this.playbackRate=1}get _playing(){return this.playing}get _currentTime(){return this.pauseAt?this.pauseAt:this.startAt?this.audioCtx.currentTime-this.startAt:this.audioCtx.currentTime}play(){this.disconnectDestination(),this.createAudioBufferSourceNode(),this.connectDestination();const t=this.pickAt?this.pickAt:this.pauseAt;this.audioBufferSourceNode.start(0,t),this.startAt=this.audioCtx.currentTime-t,this.pauseAt=0,this.playing=!0,this.props.fade?(this.setGainValue(0),this.setGainLinearRamp(1)):this.setGainValue(1)}async pause(){const t=this.audioCtx.currentTime-this.startAt;this.props.fade&&(this.setGainLinearRamp(0),await x(this.FADE_DURATION*1e3)),this.disconnectDestination(),this.initializeState(),this.pauseAt=t+this.FADE_DURATION}pick(t){this.pickAt=t,this.playing&&(this.disconnectDestination(),this.play())}replay(){this.audioBufferSourceNode&&(this.disconnectDestination(),this.initializeState()),this.play()}finish(){this.pauseAt=0,this.disconnectDestination(),this.initializeState()}setPlaybackRate(t){this.playbackRate=t,this.audioBufferSourceNode&&(this.audioBufferSourceNode.playbackRate.value=t)}initializeState(){this.playing=!1,this.startAt=0,this.pauseAt=0,this.pickAt=0}createAudioBufferSourceNode(){this.audioBufferSourceNode||(this.audioBufferSourceNode=this.audioCtx.createBufferSource(),this.audioBufferSourceNode.buffer=this.audioBuffer,this.audioBufferSourceNode.playbackRate.value=this.playbackRate)}connectDestination(){!this.audioBufferSourceNode||(this.audioBufferSourceNode.connect(this.gainNode),this.gainNode.connect(this.audioCtx.destination))}disconnectDestination(){!this.audioBufferSourceNode||(this.audioBufferSourceNode.disconnect(),this.audioBufferSourceNode.stop(),this.audioBufferSourceNode=null)}setGainValue(t){this.gainNode.gain.setValueAtTime(t,this.audioCtx.currentTime)}setGainLinearRamp(t){this.gainNode.gain.linearRampToValueAtTime(t,this.audioCtx.currentTime+this.FADE_DURATION)}}function A(s){const i=Math.floor(s/60),t=Math.floor(s%60);return`${i}:${t<10?"0":""}${t}`}class S{constructor(i,t){n(this,"el");n(this,"handler");n(this,"intersectionObserver");n(this,"timer");n(this,"rended");this.el=i,this.handler=t,this.timer=null,this.rended=!1}observe(){const i=t=>{if(this.rended)return this.unobserve();const a=t[0],o=260;a.intersectionRatio>0?this.timer=setTimeout(()=>{this.handler(),this.rended=!0},o):this.timer&&(clearTimeout(this.timer),this.timer=null)};this.intersectionObserver=new IntersectionObserver(i),this.intersectionObserver.observe(this.el)}unobserve(){this.intersectionObserver.unobserve(this.el)}}let w;function N(s,i){w=new S(s,i),w.observe()}function T(){w.unobserve()}const R=e.defineComponent({__name:"IllestWaveform",props:{url:{},requestOptions:{default:()=>({})},lineWidth:{default:.5},lineCap:{default:"round"},lineColor:{default:"#5e5e5e"},samplingRate:{default:22050},cursorWidth:{default:2},cursorColor:{default:"#fff"},maskColor:{default:"#fff"},lazy:{type:[Boolean,Object],default:!0},skeleton:{type:[Boolean,Object],default:!0},skeletonColor:{default:"#232323"},interact:{type:[Boolean,Object],default:!0},fade:{type:[Boolean,Object],default:!0}},emits:["onInit","onFetched","onReady","onPlay","onPause","onFinish","onClick"],setup(s,{expose:i,emit:t}){const a=s,o=e.ref(!1),p=e.ref(null);e.onMounted(async()=>{a.lazy?(N(p.value,v),e.watchEffect(async()=>{o.value&&await b()})):await b()}),e.onUnmounted(()=>{a.lazy&&T(),r&&r.pause()});function v(){o.value=!0}const y=e.ref(null),h=e.ref(!1);let r,f;async function b(){h.value||(u("onInit",!0),await O(),await E(),h.value=!0,u("onReady",h.value))}async function O(){r=new B(a),await r.fetchAudioFile(),u("onFetched",!0),await r.setupAudio(),G()}async function E(){f=new d(y.value,a,r._filteredData),f.setupCanvas(),e.watchEffect(()=>{f._props=a,f.setWaveStyle(C.value)})}const m=e.ref(0),_=e.ref(0),C=e.ref(0);function g(){!r._playing||(requestAnimationFrame(g),_.value=r._currentTime,C.value=_.value/r._audioDuration*f._canvas.width)}function F(c){!h.value||!a.interact||(c.layerX<=0?m.value=0:c.layerX>=f._canvas.width?m.value=f._canvas.width:m.value=c.layerX)}function z(){if(!h.value||!a.interact)return;C.value=m.value;const c=m.value/f._canvas.width*r._audioDuration;r.pick(c),_.value=c,u("onClick",p),u("onFinish",!1)}function I(){!h.value||(r.play(),u("onPlay",!0),g())}function M(){r.replay(),u("onFinish",!1),u("onPlay",!0),g()}function L(){r.pause(),u("onPause",!1)}function V(){r.finish(),u("onPlay",!1),u("onFinish",!0)}function P(c){r.setPlaybackRate(c)}function G(){e.watchEffect(()=>{_.value<=r._audioDuration||V()})}function $(){return A(_.value)}function j(){const c=r._audioDuration;return A(c)}const u=t;return i({play:I,pause:L,replay:M,getCurrentTime:$,getDuration:j,setPlaybackRate:P}),(c,Y)=>(e.openBlock(),e.createElementBlock("section",{id:"illest-waveform",ref_key:"__illestWaveformRef__",ref:p,style:e.normalizeStyle(`${h.value&&s.interact?"cursor: pointer":""}`),onMousemove:F,onClick:z},[e.createVNode(e.Transition,{name:"fade"},{default:e.withCtx(()=>[e.withDirectives(e.createElementVNode("div",{id:"illest-waveform__skeleton",style:e.normalizeStyle(`background-color: ${s.skeletonColor}`)},[e.withDirectives(e.createElementVNode("div",{id:"illest-waveform__skeleton__load",style:e.normalizeStyle(`background-color: ${s.skeletonColor}`)},null,4),[[e.vShow,!h.value]])],4),[[e.vShow,a.skeleton&&!h.value]])]),_:1}),e.createElementVNode("canvas",{id:"illest-waveform__view",ref_key:"waveRef",ref:y},null,512),e.withDirectives(e.createElementVNode("div",{id:"illest-waveform__cursor",style:e.normalizeStyle(`width:${a.cursorWidth}px; transform: translateX(${m.value}px);background-color: ${a.cursorColor}; `)},null,4),[[e.vShow,h.value&&a.interact]])],36))}}),q="",k=((s,i)=>{const t=s.__vccOpts||s;for(const[a,o]of i)t[a]=o;return t})(R,[["__scopeId","data-v-04478eb9"]]),W={install:s=>{s.component("IllestWaveform",k)}};l.IllestWaveform=k,l.default=W,Object.defineProperties(l,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
